"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[30],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8823:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:4},o="Additional Requirements",l={unversionedId:"backend/additional-requirements",id:"backend/additional-requirements",title:"Additional Requirements",description:"Nix",source:"@site/docs/backend/additional-requirements.md",sourceDirName:"backend",slug:"/backend/additional-requirements",permalink:"/docs/backend/additional-requirements",draft:!1,editUrl:"https://github.com/RSoulatIOHK/ptt_documentation/docs/backend/additional-requirements.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Vulnerabilities checked by Plutus Testing Tool",permalink:"/docs/backend/list-vulnerabilities"},next:{title:"Certificates that can be generated by the tool",permalink:"/docs/backend/certificates"}},c={},s=[{value:"Nix",id:"nix",level:2},{value:"Cabal",id:"cabal",level:2},{value:"IMPORTANT: How to depend on plutus-apps",id:"important-how-to-depend-on-plutus-apps",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"additional-requirements"},"Additional Requirements"),(0,r.kt)("h2",{id:"nix"},"Nix"),(0,r.kt)("p",null,"In order for the tool to build the project the nix flake needs to be exposed for the DApp. It is assumed that the flake is exposed to a variable called ",(0,r.kt)("inlineCode",{parentName:"p"},"iog.dapp"),". In the minimal examples repo","[link]"," the flake for the haskell project is called ",(0,r.kt)("inlineCode",{parentName:"p"},"rootProject"),". The flake is exposed in the minimal example by the adding following code to ",(0,r.kt)("inlineCode",{parentName:"p"},"flake.nix"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-nix"},"iog.dapp = rootProject;\n})) // {\niog.dapp = self.legacyPackages.x86_64-linux;\n")),(0,r.kt)("p",null,"It is only necessary for the DApp to be able to build on an x86_64 linux architecture."),(0,r.kt)("h2",{id:"cabal"},"Cabal"),(0,r.kt)("p",null,"It is assumed that there is cabal project called certification.cabal that is exposed by the flake. The certification project should simply expose a module containing the certificaiton object called certification that is to be run on the Plutus Testing Tool."),(0,r.kt)("p",null,"This is done for the escrow example using the following haskell code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"module Certification (certification) where\n\nimport Spec.Escrow (certification)\n")),(0,r.kt)("p",null,"The cabal file for this simply exposes this certification module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cabal"},"library\n  exposed-modules:  Certification\n  build-depends:\n    , base\n    , plutus-contract-certification\n    , escrow\n")),(0,r.kt)("h2",{id:"important-how-to-depend-on-plutus-apps"},"IMPORTANT: How to depend on plutus-apps"),(0,r.kt)("p",null,"The Plutus Testing Tool modifies the cabal.project file to remove the dependency on plutus-contract-certification. At the moment the source-repository-package definition needs to include the --sha256 definition above the subdir: definition. The dependency on plutus-contract-certification also needs to go at the end of the subdir: list. An example of this is shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cabal"},"source-repository-package\n  type: git\n  location: https://github.com/input-output-hk/plutus-apps.git\n  tag: 5c54f209322f62b73d88150ecb5d781d515de746\n  --sha256: krHvT653ngPWRaB0XVfupCkLUnohhmymjG6Vm9bawv0=\n  subdir:\n    cardano-node-emulator\n    cardano-streaming\n    freer-extras\n    marconi-core\n    marconi-chain-index\n    pab-blockfrost\n    plutus-chain-index\n    plutus-chain-index-core\n    plutus-contract\n    plutus-pab\n    plutus-ledger\n    plutus-script-utils\n    plutus-tx-constraints\n    plutus-contract-certification\n")))}d.isMDXComponent=!0}}]);